{
  "_args": [
    [
      {
        "raw": "cldr-plurals@1.0.0",
        "scope": null,
        "escapedName": "cldr-plurals",
        "name": "cldr-plurals",
        "rawSpec": "1.0.0",
        "spec": "1.0.0",
        "type": "version"
      },
      "C:\\Users\\Diego\\Documents\\Proyectos ongoing\\ejercicio Mean Stack\\node_modules\\mondo"
    ]
  ],
  "_from": "cldr-plurals@1.0.0",
  "_id": "cldr-plurals@1.0.0",
  "_inCache": true,
  "_location": "/cldr-plurals",
  "_npmUser": {
    "name": "jamesarosen",
    "email": "james.a.rosen@gmail.com"
  },
  "_npmVersion": "1.1.59",
  "_phantomChildren": {},
  "_requested": {
    "raw": "cldr-plurals@1.0.0",
    "scope": null,
    "escapedName": "cldr-plurals",
    "name": "cldr-plurals",
    "rawSpec": "1.0.0",
    "spec": "1.0.0",
    "type": "version"
  },
  "_requiredBy": [
    "/mondo"
  ],
  "_resolved": "https://registry.npmjs.org/cldr-plurals/-/cldr-plurals-1.0.0.tgz",
  "_shasum": "c0a5ec9814d7d25a78ac415ddeb32c72e591a8b7",
  "_shrinkwrap": null,
  "_spec": "cldr-plurals@1.0.0",
  "_where": "C:\\Users\\Diego\\Documents\\Proyectos ongoing\\ejercicio Mean Stack\\node_modules\\mondo",
  "author": {
    "name": "James A. Rosen"
  },
  "bugs": {
    "url": "https://github.com/jamesarosen/CLDR.js/issues"
  },
  "dependencies": {},
  "description": "Common Locale Data Repository Pluralization Logic",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "c0a5ec9814d7d25a78ac415ddeb32c72e591a8b7",
    "tarball": "https://registry.npmjs.org/cldr-plurals/-/cldr-plurals-1.0.0.tgz"
  },
  "homepage": "https://github.com/jamesarosen/CLDR.js#readme",
  "keywords": [
    "internationalization",
    "pluralization",
    "unicode",
    "CLDR"
  ],
  "license": "APLv2",
  "main": "plurals.js",
  "maintainers": [
    {
      "name": "jamesarosen",
      "email": "james.a.rosen@gmail.com"
    }
  ],
  "name": "cldr-plurals",
  "optionalDependencies": {},
  "readme": "## CLDR.js\n\nCLDR.js provides logic from the\n[Unicode Common Locale Data Repository](http://cldr.unicode.org/).\nCurrently, the only functionality it provides is the\n[pluralization rules](http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html).\n\n\n### Plural Rules\n\nUsage:\n\n    CLDR.pluralForm(0, 'en');     // => 'other'\n    CLDR.pluralForm(1, 'en-US');  // => 'one'\n    CLDR.pluralForm(2.383, 'fr'); // => 'other'\n    CLDR.pluralForm(1, 'zh');     // => 'other'\n    CLDR.pluralForm(26, 'uk');    // => 'many'\n\nIf you set `CLDR.defaultLanguage` then the second argument is optional:\n\n    CLDR.defaultLanguage = 'pl';\n    CLDR.pluralForm(22); // => 'few'\n\nThough CLDR.js doens't *provide* an I18n framework, you can use this\nlogic as part of yours. For example, you might write the following:\n\n    CLDR.defaultLanguage = 'en';\n\n    var translations = {\n      'en': {\n        'widget': {\n          'one': 'one widget',\n          'other': '{{count}} widgets'\n        }\n      },\n      'jp': {\n        'widget': {\n          'other': '{{count}} ウィジェット'\n        }\n      }\n    };\n\n    function pluralize(key, count, language) {\n      var form = CLDR.pluralForm(count),\n          language = language || CLDR.defaultLanguage;\n      return translations[language][key][form];\n    }\n",
  "repository": {
    "type": "git",
    "url": "git://github.com/jamesarosen/CLDR.js.git"
  },
  "version": "1.0.0"
}
